import React from 'react';
import type { FormItemProps, SpaceProps } from 'antd';
import type { GroupProps } from 'antd/lib/input';
export declare type ProFormFieldSetProps<T = any> = {
    value?: T[];
    onChange?: (value: T[]) => void;
    space?: SpaceProps | GroupProps;
    valuePropName?: string;
    type?: 'space' | 'group';
    fieldProps?: any;
};
export declare function defaultGetValueFromEvent(valuePropName: string, ...args: any): any;
declare const _default: React.ComponentClass<FormItemProps<any> & ProFormFieldSetProps<any> & import("../../interface").ExtendsProps & {
    getFormItemProps?: (() => Record<string, any>) | undefined;
    getFieldProps?: (() => Record<string, any>) | undefined;
}, any> | React.FunctionComponent<FormItemProps<any> & ProFormFieldSetProps<any> & import("../../interface").ExtendsProps & {
    getFormItemProps?: (() => Record<string, any>) | undefined;
    getFieldProps?: (() => Record<string, any>) | undefined;
}>;
export default _default;
