"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModalForm = ModalForm;

require("antd/es/modal/style");

var _modal = _interopRequireDefault(require("antd/es/modal"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

require("antd/es/config-provider/style");

var _configProvider = _interopRequireDefault(require("antd/es/config-provider"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _useMergedState5 = _interopRequireDefault(require("rc-util/lib/hooks/useMergedState"));

var _omit = _interopRequireDefault(require("omit.js"));

var _reactDom = require("react-dom");

var _BaseForm = require("../../BaseForm");

var _warning = require("rc-util/lib/warning");

var _excluded = ["children", "trigger", "onVisibleChange", "modalProps", "onFinish", "title", "width"];

function ModalForm(_ref) {
  var _context$locale, _context$locale$Modal, _context$locale2, _context$locale2$Moda, _rest$submitter, _rest$submitter2, _rest$submitter3;

  var children = _ref.children,
      trigger = _ref.trigger,
      onVisibleChange = _ref.onVisibleChange,
      modalProps = _ref.modalProps,
      onFinish = _ref.onFinish,
      title = _ref.title,
      width = _ref.width,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  var _useMergedState = (0, _useMergedState5.default)(!!rest.visible, {
    value: rest.visible,
    onChange: onVisibleChange
  }),
      _useMergedState2 = (0, _slicedToArray2.default)(_useMergedState, 2),
      visible = _useMergedState2[0],
      setVisible = _useMergedState2[1];
  /** Modal dom 解除渲染之后 */


  var _useMergedState3 = (0, _useMergedState5.default)(false),
      _useMergedState4 = (0, _slicedToArray2.default)(_useMergedState3, 2),
      isDestroy = _useMergedState4[0],
      setIsDestroy = _useMergedState4[1];

  var needRenderForm = (0, _react.useMemo)(function () {
    if (modalProps === null || modalProps === void 0 ? void 0 : modalProps.destroyOnClose) {
      return visible;
    }

    return true;
  }, [modalProps === null || modalProps === void 0 ? void 0 : modalProps.destroyOnClose, visible]);
  (0, _react.useEffect)(function () {
    if (visible && rest.visible) {
      onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(true);
    }
  }, [rest.visible, visible]);
  var context = (0, _react.useContext)(_configProvider.default.ConfigContext);
  (0, _warning.noteOnce)( // eslint-disable-next-line @typescript-eslint/dot-notation
  !rest['footer'] || !(modalProps === null || modalProps === void 0 ? void 0 : modalProps.footer), 'ModalForm 是一个 ProForm 的特殊布局，如果想自定义按钮，请使用 submit.render 自定义。');
  var renderSubmitter = rest.submitter === false ? false : (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rest.submitter), {}, {
    searchConfig: (0, _objectSpread2.default)({
      submitText: (modalProps === null || modalProps === void 0 ? void 0 : modalProps.okText) || ((_context$locale = context.locale) === null || _context$locale === void 0 ? void 0 : (_context$locale$Modal = _context$locale.Modal) === null || _context$locale$Modal === void 0 ? void 0 : _context$locale$Modal.okText) || '确认',
      resetText: (modalProps === null || modalProps === void 0 ? void 0 : modalProps.cancelText) || ((_context$locale2 = context.locale) === null || _context$locale2 === void 0 ? void 0 : (_context$locale2$Moda = _context$locale2.Modal) === null || _context$locale2$Moda === void 0 ? void 0 : _context$locale2$Moda.cancelText) || '取消'
    }, (_rest$submitter = rest.submitter) === null || _rest$submitter === void 0 ? void 0 : _rest$submitter.searchConfig),
    submitButtonProps: (0, _objectSpread2.default)({
      type: (modalProps === null || modalProps === void 0 ? void 0 : modalProps.okType) || 'primary'
    }, (_rest$submitter2 = rest.submitter) === null || _rest$submitter2 === void 0 ? void 0 : _rest$submitter2.submitButtonProps),
    resetButtonProps: (0, _objectSpread2.default)({
      preventDefault: true,
      onClick: function onClick(e) {
        var _modalProps$onCancel;

        modalProps === null || modalProps === void 0 ? void 0 : (_modalProps$onCancel = modalProps.onCancel) === null || _modalProps$onCancel === void 0 ? void 0 : _modalProps$onCancel.call(modalProps, e);
        setVisible(false);
      }
    }, (_rest$submitter3 = rest.submitter) === null || _rest$submitter3 === void 0 ? void 0 : _rest$submitter3.resetButtonProps)
  });

  var triggerDom = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {
    key: "trigger"
  }, trigger && /*#__PURE__*/_react.default.cloneElement(trigger, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, trigger.props), {}, {
    onClick: function () {
      var _onClick = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(e) {
        var _trigger$props, _trigger$props$onClic;

        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                setVisible(!visible);
                (_trigger$props = trigger.props) === null || _trigger$props === void 0 ? void 0 : (_trigger$props$onClic = _trigger$props.onClick) === null || _trigger$props$onClic === void 0 ? void 0 : _trigger$props$onClic.call(_trigger$props, e);

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function onClick(_x) {
        return _onClick.apply(this, arguments);
      }

      return onClick;
    }()
  })));

  (0, _react.useEffect)(function () {
    if (visible) {
      setTimeout(function () {
        setIsDestroy(visible);
      }, 100);
      return;
    }

    setIsDestroy(visible);
  }, [setIsDestroy, visible]);
  var footerRef = (0, _react.useRef)(null);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_modal.default, (0, _extends2.default)({
    title: title,
    width: width || 800
  }, modalProps, {
    visible: visible,
    onCancel: function onCancel(e) {
      var _modalProps$onCancel2;

      setVisible(false);
      modalProps === null || modalProps === void 0 ? void 0 : (_modalProps$onCancel2 = modalProps.onCancel) === null || _modalProps$onCancel2 === void 0 ? void 0 : _modalProps$onCancel2.call(modalProps, e);
    },
    footer: rest.submitter !== false && /*#__PURE__*/_react.default.createElement("div", {
      ref: footerRef,
      style: {
        display: 'flex',
        justifyContent: 'flex-end'
      }
    })
  }), needRenderForm && /*#__PURE__*/_react.default.createElement(_BaseForm.BaseForm, (0, _extends2.default)({
    formComponentType: "ModalForm",
    layout: "vertical"
  }, (0, _omit.default)(rest, ['visible']), {
    onFinish: /*#__PURE__*/function () {
      var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(values) {
        var success;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (onFinish) {
                  _context2.next = 2;
                  break;
                }

                return _context2.abrupt("return");

              case 2:
                _context2.next = 4;
                return onFinish(values);

              case 4:
                success = _context2.sent;

                if (success) {
                  setVisible(false);
                }

              case 6:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      return function (_x2) {
        return _ref2.apply(this, arguments);
      };
    }(),
    submitter: renderSubmitter,
    contentRender: function contentRender(item, submitter) {
      // 未配置自定义提交按钮，则直接将提交按钮渲染到内容区
      if (rest.submitter === false) {
        return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, item, submitter);
      } // 如果用户配置了自定义的提交按钮，那么我们等到弹框/抽屉底部区域渲染成功后再将自定义按钮渲染过去


      if (footerRef.current && isDestroy && submitter) {
        return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, item, /*#__PURE__*/(0, _reactDom.createPortal)(submitter, footerRef.current));
      }

      return item;
    }
  }), children)), triggerDom);
}